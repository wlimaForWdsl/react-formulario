{"ast":null,"code":"var _jsxFileName = \"/Users/wslima/projetosW/React/ReactDoZero/react-formulario/src/components/AdicionaCliente.jsx\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport Campo from './Campo';\nimport Funcao from './Funcoes';\n/*const Campo = ({label, ...props}) => {\n\n  const [field, meta] = useField(props);\n  return (\n      <div className='form-group'>\n        <label htmlFor={props.id}>{label}</label>\n      <input \n          {...field}\n          {...props}\n          className={meta.error && meta.touched ? 'is-invalid': '' }\n      />\n      {meta.error && meta.touched ? (\n          <div className=\"invalid-feedback\"> {meta.error} </div>\n      ) : null }\n      </div>\n  );\n};\n*/\n\nconst AdicionaCliente = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Cadastro de Clientes\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      nome: '',\n      email: '',\n      nascimento: ''\n    },\n    validate: values => {\n      /*#__PURE__*/React.createElement(Funcao, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      });\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Campo, {\n    type: \"text\",\n    id: \"nome\",\n    name: \"nome\",\n    label: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Campo, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Campo, {\n    id: \"nascimento\",\n    name: \"nascimento\",\n    type: \"date\",\n    label: \"Data de Nascimento:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Adicionar\"))));\n};\n_c = AdicionaCliente;\nexport default AdicionaCliente;\nvar _c;\n$RefreshReg$(_c, \"AdicionaCliente\");","map":{"version":3,"names":["React","Formik","Campo","Funcao","AdicionaCliente","nome","email","nascimento","values","alert","JSON","stringify","props","handleSubmit"],"sources":["/Users/wslima/projetosW/React/ReactDoZero/react-formulario/src/components/AdicionaCliente.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik } from 'formik'\nimport Campo from './Campo'\nimport Funcao from './Funcoes';\n/*const Campo = ({label, ...props}) => {\n\n  const [field, meta] = useField(props);\n  return (\n      <div className='form-group'>\n        <label htmlFor={props.id}>{label}</label>\n      <input \n          {...field}\n          {...props}\n          className={meta.error && meta.touched ? 'is-invalid': '' }\n      />\n      {meta.error && meta.touched ? (\n          <div className=\"invalid-feedback\"> {meta.error} </div>\n      ) : null }\n      </div>\n  );\n};\n*/\n\n\nconst AdicionaCliente = () => {\n\n  return (\n    <>\n      <h1>Cadastro de Clientes</h1>\n\n      <Formik \n      initialValues={{nome: '', email: '', nascimento: ''}}\n      validate={(values) => {\n      <Funcao />\n\n\n\n      }}\n      onSubmit={(values) => {\n        alert(JSON.stringify(values));\n      }}\n      >\n        {(props) => (\n\n          <form onSubmit={props.handleSubmit} noValidate>\n            <Campo type=\"text\" id=\"nome\" name=\"nome\" label=\"Nome\" />\n            <Campo id=\"email\" name=\"email\" type=\"email\" label=\"Email\" />\n            <Campo id=\"nascimento\" name=\"nascimento\" type=\"date\" label=\"Data de Nascimento:\" />\n          <button type=\"submit\">Adicionar</button>\n        </form>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AdicionaCliente;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,eAAe,GAAG,MAAM;EAE5B,oBACE,uDACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,sBAAoB,CAAK,eAE7B,oBAAC,MAAM;IACP,aAAa,EAAE;MAACC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAE;IACrD,QAAQ,EAAGC,MAAM,IAAK;MACtB,iCAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG;IAIV,CAAE;IACF,QAAQ,EAAGA,MAAM,IAAK;MACpBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,CAAC;IAC/B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEEI,KAAK,iBAEL;IAAM,QAAQ,EAAEA,KAAK,CAACC,YAAa;IAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5C,oBAAC,KAAK;IAAC,IAAI,EAAC,MAAM;IAAC,EAAE,EAAC,MAAM;IAAC,IAAI,EAAC,MAAM;IAAC,KAAK,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACxD,oBAAC,KAAK;IAAC,EAAE,EAAC,OAAO;IAAC,IAAI,EAAC,OAAO;IAAC,IAAI,EAAC,OAAO;IAAC,KAAK,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC5D,oBAAC,KAAK;IAAC,EAAE,EAAC,YAAY;IAAC,IAAI,EAAC,YAAY;IAAC,IAAI,EAAC,MAAM;IAAC,KAAK,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACrF;IAAQ,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,WAAS,CAAS,CAEvC,CACI,CACR;AAEP,CAAC;AAAC,KA9BIT,eAAe;AAgCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}