{"ast":null,"code":"var _jsxFileName = \"/Users/wslima/projetosW/React/ReactDoZero/react-formulario/src/components/AdicionaCliente.jsx\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport Campo from './Campo';\nimport * as yup from 'yup';\nconst AdicionaCliente = () => {\n  const esquema = yup.object({\n    nome: yup.string().required('O Nome obrigatorio').min(5, ' O nome tem no min 10').max(30, ' o nome tem que ter ate 30'),\n    email: yup.string().required(' O email e obrigatorio').email('O email precisa ter o formato email@email.com '),\n    nascimento: yup.date().required('A daata de nascimento e obrigatoria').max(new Date(), 'Voce nao pode ter nascido no futoro').min()\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Cadastro de Clientes\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      nome: '',\n      email: '',\n      nascimento: ''\n    },\n    validationSchema: esquema,\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Campo, {\n    type: \"text\",\n    id: \"nome\",\n    name: \"nome\",\n    label: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Campo, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Campo, {\n    id: \"nascimento\",\n    name: \"nascimento\",\n    type: \"date\",\n    label: \"Data de Nascimento:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Adicionar\"))));\n};\n_c = AdicionaCliente;\nexport default AdicionaCliente;\nvar _c;\n$RefreshReg$(_c, \"AdicionaCliente\");","map":{"version":3,"names":["React","Formik","Campo","yup","AdicionaCliente","esquema","object","nome","string","required","min","max","email","nascimento","date","Date","values","alert","JSON","stringify","props","handleSubmit"],"sources":["/Users/wslima/projetosW/React/ReactDoZero/react-formulario/src/components/AdicionaCliente.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik } from 'formik'\nimport Campo from './Campo'\nimport * as yup from 'yup'\n\n\nconst AdicionaCliente = () => {\n\n  const esquema = yup.object({\n    nome: yup.string()\n    .required('O Nome obrigatorio')\n    .min(5, ' O nome tem no min 10')\n    .max(30, ' o nome tem que ter ate 30'),\n    email: yup.string().required(' O email e obrigatorio').email('O email precisa ter o formato email@email.com '),\n    nascimento: yup.date()\n    .required('A daata de nascimento e obrigatoria')\n    .max(new Date(), 'Voce nao pode ter nascido no futoro')\n    .min()\n\n\n\n  })\n\n  return (\n    <>\n      <h1>Cadastro de Clientes</h1>\n\n      <Formik\n        initialValues={{ nome: '', email: '', nascimento: '' }}\n        validationSchema={esquema}\n        onSubmit={(values) => {\n          alert(JSON.stringify(values));\n        }}\n      >\n        {(props) => (\n\n          <form onSubmit={props.handleSubmit} noValidate>\n            <Campo type=\"text\" id=\"nome\" name=\"nome\" label=\"Nome\" />\n            <Campo id=\"email\" name=\"email\" type=\"email\" label=\"Email\" />\n            <Campo id=\"nascimento\" name=\"nascimento\" type=\"date\" label=\"Data de Nascimento:\" />\n            <button type=\"submit\">Adicionar</button>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AdicionaCliente;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAG1B,MAAMC,eAAe,GAAG,MAAM;EAE5B,MAAMC,OAAO,GAAGF,GAAG,CAACG,MAAM,CAAC;IACzBC,IAAI,EAAEJ,GAAG,CAACK,MAAM,EAAE,CACjBC,QAAQ,CAAC,oBAAoB,CAAC,CAC9BC,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAC/BC,GAAG,CAAC,EAAE,EAAE,4BAA4B,CAAC;IACtCC,KAAK,EAAET,GAAG,CAACK,MAAM,EAAE,CAACC,QAAQ,CAAC,wBAAwB,CAAC,CAACG,KAAK,CAAC,gDAAgD,CAAC;IAC9GC,UAAU,EAAEV,GAAG,CAACW,IAAI,EAAE,CACrBL,QAAQ,CAAC,qCAAqC,CAAC,CAC/CE,GAAG,CAAC,IAAII,IAAI,EAAE,EAAE,qCAAqC,CAAC,CACtDL,GAAG;EAIN,CAAC,CAAC;EAEF,oBACE,uDACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,sBAAoB,CAAK,eAE7B,oBAAC,MAAM;IACL,aAAa,EAAE;MAAEH,IAAI,EAAE,EAAE;MAAEK,KAAK,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAE;IACvD,gBAAgB,EAAER,OAAQ;IAC1B,QAAQ,EAAGW,MAAM,IAAK;MACpBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,CAAC;IAC/B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEAI,KAAK,iBAEL;IAAM,QAAQ,EAAEA,KAAK,CAACC,YAAa;IAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5C,oBAAC,KAAK;IAAC,IAAI,EAAC,MAAM;IAAC,EAAE,EAAC,MAAM;IAAC,IAAI,EAAC,MAAM;IAAC,KAAK,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACxD,oBAAC,KAAK;IAAC,EAAE,EAAC,OAAO;IAAC,IAAI,EAAC,OAAO;IAAC,IAAI,EAAC,OAAO;IAAC,KAAK,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC5D,oBAAC,KAAK;IAAC,EAAE,EAAC,YAAY;IAAC,IAAI,EAAC,YAAY;IAAC,IAAI,EAAC,MAAM;IAAC,KAAK,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACnF;IAAQ,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,WAAS,CAAS,CAE3C,CACM,CACR;AAEP,CAAC;AAAC,KAxCIjB,eAAe;AA0CrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}